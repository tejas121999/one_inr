{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pravi\\\\OneDrive\\\\Desktop\\\\one_inr\\\\one_inr_web\\\\src\\\\Components\\\\Campaigns\\\\Campaigns.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport SideBar from \"../Account/sidebar\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\nimport { visuallyHidden } from \"@mui/utils\"; // const Campaigns = () => {\n//   // const [order, setOrder] = React.useState('asc');\n//   // const [orderBy, setOrderBy] = React.useState('name');\n//   const [page, setPage] = React.useState(0);\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\n//   const handleChangePage = (event, newPage) => {\n//     setPage(newPage);\n//   };\n//   const handleChangeRowsPerPage = (event) => {\n//     setRowsPerPage(+event.target.value);\n//     setPage(0);\n//   };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst headCells = [{\n  id: \"pid\",\n  label: \"ID\",\n  minWidth: 100\n}, {\n  id: \"name\",\n  label: \"Title\",\n  minWidth: 170\n}, {\n  id: \"total\",\n  label: \"Total\",\n  minWidth: 100,\n  align: \"right\"\n}, {\n  id: \"action\",\n  label: \"Action\",\n  minWidth: 80,\n  align: \"right\"\n}];\n\nfunction createData(pid, name, total, action) {\n  return {\n    pid,\n    name,\n    total,\n    action\n  };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n} // This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\n\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) {\n      return order;\n    }\n\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst rows = [createData(1, \"India\", 7263), createData(2, \"China\", 6961), createData(3, \"Italy\", 1340), createData(4, \"United States\", 3520), createData(5, \"Canada\", 4670), createData(6, \"Australia\", 2024), createData(7, \"Germany\", 8678), createData(8, \"Mexico\", 5550), createData(9, \"Japan\", 7973), createData(10, \"France\", 679)];\n\nfunction EnhancedTableHead(props) {\n  const {\n    order,\n    orderBy,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: headCell.numeric ? \"right\" : \"left\",\n        padding: headCell.disablePadding ? \"none\" : \"normal\",\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : \"asc\",\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\",\n            sx: visuallyHidden,\n            children: order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EnhancedTableHead;\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired\n}; // const EnhancedTableToolbar = (props) => {\n//   return (\n//     <Toolbar\n//       sx={{\n//         pl: { sm: 2 },\n//         pr: { xs: 1, sm: 1 },\n//         ...(numSelected > 0 && {\n//           bgcolor: (theme) =>\n//             alpha(\n//               theme.palette.primary.main,\n//               theme.palette.action.activatedOpacity\n//             ),\n//         }),\n//       }}\n//     >\n//       {numSelected > 0 ? (\n//         <Typography\n//           sx={{ flex: \"1 1 100%\" }}\n//           color=\"inherit\"\n//           variant=\"subtitle1\"\n//           component=\"div\"\n//         >\n//           {numSelected} selected\n//         </Typography>\n//       ) : (\n//         <Typography\n//           sx={{ flex: \"1 1 100%\" }}\n//           variant=\"h6\"\n//           id=\"tableTitle\"\n//           component=\"div\"\n//         >\n//           Nutrition\n//         </Typography>\n//       )}\n//       {numSelected > 0 ? (\n//         <Tooltip title=\"Delete\">\n//           <IconButton>\n//             <DeleteIcon />\n//           </IconButton>\n//         </Tooltip>\n//       ) : (\n//         <Tooltip title=\"Filter list\">\n//           <IconButton>\n//             <FilterListIcon />\n//           </IconButton>\n//         </Tooltip>\n//       )}\n//     </Toolbar>\n//   );\n// };\n\nexport default function EnhancedTable() {\n  _s();\n\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"name\");\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  }; // const handleSelectAllClick = (event) => {\n  //   if (event.target.checked) {\n  //     const newSelecteds = rows.map((n) => n.name);\n  //     setSelected(newSelecteds);\n  //     return;\n  //   }\n  //   setSelected([]);\n  // };\n  // const handleClick = (event, name) => {\n  //   const selectedIndex = selected.indexOf(name);\n  //   let newSelected = [];\n  //   if (selectedIndex === -1) {\n  //     newSelected = newSelected.concat(selected, name);\n  //   } else if (selectedIndex === 0) {\n  //     newSelected = newSelected.concat(selected.slice(1));\n  //   } else if (selectedIndex === selected.length - 1) {\n  //     newSelected = newSelected.concat(selected.slice(0, -1));\n  //   } else if (selectedIndex > 0) {\n  //     newSelected = newSelected.concat(\n  //       selected.slice(0, selectedIndex),\n  //       selected.slice(selectedIndex + 1)\n  //     );\n  //   }\n  //   setSelected(newSelected);\n  // };\n\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }; // const isSelected = (name) => selected.indexOf(name) !== -1;\n  // Avoid a layout jump when reaching the last page with empty rows.\n\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"site-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: \"0\"\n        },\n        children: \"My Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"breadcrumbs\",\n        style: {\n          display: \"inline-flex\",\n          marginBottom: \"25px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\xA0/\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), \"Profile\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-9\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"account-content profile\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"account-title\",\n                children: \"Backed Campaigns\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"account-main\",\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: \"100%\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Paper, {\n                    sx: {\n                      width: \"100%\",\n                      mb: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n                      children: /*#__PURE__*/_jsxDEV(Table, {\n                        sx: {\n                          minWidth: 750\n                        },\n                        \"aria-labelledby\": \"tableTitle\",\n                        children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n                          order: order,\n                          orderBy: orderBy,\n                          onRequestSort: handleRequestSort,\n                          rowCount: rows.length\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 283,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                          children: [stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n                            // const isItemSelected = isSelected(row.name);\n                            const labelId = `enhanced-table-checkbox-${index}`;\n                            return /*#__PURE__*/_jsxDEV(TableRow, {\n                              hover: true // onClick={(event) =>\n                              //   handleClick(event, row.name)\n                              // }\n                              ,\n                              role: \"checkbox\" // aria-checked={isItemSelected}\n                              ,\n                              tabIndex: -1,\n                              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                                children: row.pid\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 322,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                                component: \"th\",\n                                id: labelId,\n                                scope: \"row\",\n                                padding: \"none\",\n                                children: row.name\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 323,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                                children: row.total\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 331,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                                children: \"Action\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 332,\n                                columnNumber: 37\n                              }, this)]\n                            }, row.name, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 302,\n                              columnNumber: 35\n                            }, this);\n                          }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow // style={{\n                          //   height: (dense ? 33 : 53) * emptyRows,\n                          // }}\n                          , {\n                            children: /*#__PURE__*/_jsxDEV(TableCell, {\n                              colSpan: 6\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 342,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 337,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 289,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 279,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n                      rowsPerPageOptions: [5, 10, 25],\n                      component: \"div\",\n                      count: rows.length,\n                      rowsPerPage: rowsPerPage,\n                      page: page,\n                      onPageChange: handleChangePage,\n                      onRowsPerPageChange: handleChangeRowsPerPage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 348,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EnhancedTable, \"jGmIyc1rv19BsxgZDLNEOu/eCEE=\");\n\n_c2 = EnhancedTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTable\");","map":{"version":3,"sources":["C:/Users/pravi/OneDrive/Desktop/one_inr/one_inr_web/src/Components/Campaigns/Campaigns.js"],"names":["React","Link","Route","SideBar","PropTypes","alpha","Box","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","FilterListIcon","visuallyHidden","headCells","id","label","minWidth","align","createData","pid","name","total","action","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","rows","EnhancedTableHead","props","onRequestSort","createSortHandler","property","event","headCell","numeric","disablePadding","propTypes","func","isRequired","oneOf","string","EnhancedTable","setOrder","useState","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","handleRequestSort","isAsc","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","emptyRows","Math","max","length","margin","display","marginBottom","width","mb","slice","row","labelId"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport SideBar from \"../Account/sidebar\";\r\nimport PropTypes from \"prop-types\";\r\nimport { alpha } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\r\nimport { visuallyHidden } from \"@mui/utils\";\r\n\r\n// const Campaigns = () => {\r\n//   // const [order, setOrder] = React.useState('asc');\r\n//   // const [orderBy, setOrderBy] = React.useState('name');\r\n//   const [page, setPage] = React.useState(0);\r\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n//   const handleChangePage = (event, newPage) => {\r\n//     setPage(newPage);\r\n//   };\r\n\r\n//   const handleChangeRowsPerPage = (event) => {\r\n//     setRowsPerPage(+event.target.value);\r\n//     setPage(0);\r\n//   };\r\n\r\nconst headCells = [\r\n  { id: \"pid\", label: \"ID\", minWidth: 100 },\r\n  { id: \"name\", label: \"Title\", minWidth: 170 },\r\n  {\r\n    id: \"total\",\r\n    label: \"Total\",\r\n    minWidth: 100,\r\n    align: \"right\",\r\n  },\r\n  {\r\n    id: \"action\",\r\n    label: \"Action\",\r\n    minWidth: 80,\r\n    align: \"right\",\r\n  },\r\n];\r\n\r\nfunction createData(pid, name, total, action) {\r\n  return { pid, name, total, action };\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst rows = [\r\n  createData(1, \"India\", 7263),\r\n  createData(2, \"China\", 6961),\r\n  createData(3, \"Italy\", 1340),\r\n  createData(4, \"United States\", 3520),\r\n  createData(5, \"Canada\", 4670),\r\n  createData(6, \"Australia\", 2024),\r\n  createData(7, \"Germany\", 8678),\r\n  createData(8, \"Mexico\", 5550),\r\n  createData(9, \"Japan\", 7973),\r\n  createData(10, \"France\", 679),\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n};\r\n\r\n// const EnhancedTableToolbar = (props) => {\r\n\r\n//   return (\r\n//     <Toolbar\r\n//       sx={{\r\n//         pl: { sm: 2 },\r\n//         pr: { xs: 1, sm: 1 },\r\n//         ...(numSelected > 0 && {\r\n//           bgcolor: (theme) =>\r\n//             alpha(\r\n//               theme.palette.primary.main,\r\n//               theme.palette.action.activatedOpacity\r\n//             ),\r\n//         }),\r\n//       }}\r\n//     >\r\n//       {numSelected > 0 ? (\r\n//         <Typography\r\n//           sx={{ flex: \"1 1 100%\" }}\r\n//           color=\"inherit\"\r\n//           variant=\"subtitle1\"\r\n//           component=\"div\"\r\n//         >\r\n//           {numSelected} selected\r\n//         </Typography>\r\n//       ) : (\r\n//         <Typography\r\n//           sx={{ flex: \"1 1 100%\" }}\r\n//           variant=\"h6\"\r\n//           id=\"tableTitle\"\r\n//           component=\"div\"\r\n//         >\r\n//           Nutrition\r\n//         </Typography>\r\n//       )}\r\n\r\n//       {numSelected > 0 ? (\r\n//         <Tooltip title=\"Delete\">\r\n//           <IconButton>\r\n//             <DeleteIcon />\r\n//           </IconButton>\r\n//         </Tooltip>\r\n//       ) : (\r\n//         <Tooltip title=\"Filter list\">\r\n//           <IconButton>\r\n//             <FilterListIcon />\r\n//           </IconButton>\r\n//         </Tooltip>\r\n//       )}\r\n//     </Toolbar>\r\n//   );\r\n// };\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"name\");\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  // const handleSelectAllClick = (event) => {\r\n  //   if (event.target.checked) {\r\n  //     const newSelecteds = rows.map((n) => n.name);\r\n  //     setSelected(newSelecteds);\r\n  //     return;\r\n  //   }\r\n  //   setSelected([]);\r\n  // };\r\n\r\n  // const handleClick = (event, name) => {\r\n  //   const selectedIndex = selected.indexOf(name);\r\n  //   let newSelected = [];\r\n\r\n  //   if (selectedIndex === -1) {\r\n  //     newSelected = newSelected.concat(selected, name);\r\n  //   } else if (selectedIndex === 0) {\r\n  //     newSelected = newSelected.concat(selected.slice(1));\r\n  //   } else if (selectedIndex === selected.length - 1) {\r\n  //     newSelected = newSelected.concat(selected.slice(0, -1));\r\n  //   } else if (selectedIndex > 0) {\r\n  //     newSelected = newSelected.concat(\r\n  //       selected.slice(0, selectedIndex),\r\n  //       selected.slice(selectedIndex + 1)\r\n  //     );\r\n  //   }\r\n\r\n  //   setSelected(newSelected);\r\n  // };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  return (\r\n    <div className=\"site-main\">\r\n      <div className=\"container\">\r\n        <h4 style={{ margin: \"0\" }}>My Profile</h4>\r\n        <div\r\n          class=\"breadcrumbs\"\r\n          style={{ display: \"inline-flex\", marginBottom: \"25px\" }}\r\n        >\r\n          <Link to=\"/\">Home</Link>\r\n          <span>&nbsp;/&nbsp;</span>\r\n          Profile\r\n        </div>\r\n      </div>\r\n      <div className=\"account-wrapper\">\r\n        <div className=\"container\">\r\n          <div class=\"row\">\r\n            <SideBar />\r\n            <div className=\"col-lg-9\">\r\n              <div className=\"account-content profile\">\r\n                <h3 className=\"account-title\">Backed Campaigns</h3>\r\n                <div className=\"account-main\">\r\n                  <Box sx={{ width: \"100%\" }}>\r\n                    <Paper sx={{ width: \"100%\", mb: 2 }}>\r\n                      <TableContainer>\r\n                        <Table\r\n                          sx={{ minWidth: 750 }}\r\n                          aria-labelledby=\"tableTitle\"\r\n                        >\r\n                          <EnhancedTableHead\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={rows.length}\r\n                          />\r\n                          <TableBody>\r\n                            {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n                 rows.slice().sort(getComparator(order, orderBy)) */}\r\n                            {stableSort(rows, getComparator(order, orderBy))\r\n                              .slice(\r\n                                page * rowsPerPage,\r\n                                page * rowsPerPage + rowsPerPage\r\n                              )\r\n                              .map((row, index) => {\r\n                                // const isItemSelected = isSelected(row.name);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                return (\r\n                                  <TableRow\r\n                                    hover\r\n                                    // onClick={(event) =>\r\n                                    //   handleClick(event, row.name)\r\n                                    // }\r\n                                    role=\"checkbox\"\r\n                                    // aria-checked={isItemSelected}\r\n                                    tabIndex={-1}\r\n                                    key={row.name}\r\n                                    // selected={isItemSelected}\r\n                                  >\r\n                                    {/* <TableCell padding=\"checkbox\">\r\n                                      <Checkbox\r\n                                        color=\"primary\"\r\n                                        checked={isItemSelected}\r\n                                        inputProps={{\r\n                                          \"aria-labelledby\": labelId,\r\n                                        }}\r\n                                      />\r\n                                    </TableCell> */}\r\n                                    <TableCell>{row.pid}</TableCell>\r\n                                    <TableCell\r\n                                      component=\"th\"\r\n                                      id={labelId}\r\n                                      scope=\"row\"\r\n                                      padding=\"none\"\r\n                                    >\r\n                                      {row.name}\r\n                                    </TableCell>\r\n                                    <TableCell>{row.total}</TableCell>\r\n                                    <TableCell>Action</TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            {emptyRows > 0 && (\r\n                              <TableRow\r\n                              // style={{\r\n                              //   height: (dense ? 33 : 53) * emptyRows,\r\n                              // }}\r\n                              >\r\n                                <TableCell colSpan={6} />\r\n                              </TableRow>\r\n                            )}\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                      <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        component=\"div\"\r\n                        count={rows.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                      />\r\n                    </Paper>\r\n                  </Box>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <Route path=\"/profile/password\" component={ProfilePass} />\r\n      <Route path=\"/profile/edit\" component={EditProfile} /> */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}