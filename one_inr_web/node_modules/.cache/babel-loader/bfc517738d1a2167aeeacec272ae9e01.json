{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pravi\\\\OneDrive\\\\Desktop\\\\one_inr\\\\one_inr_web\\\\src\\\\Components\\\\auth\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ErrorValidation from \"./ErrorValidation\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\"; // import { onLogin } from \"../../../Redux/Authentication/AuthAction\";\n\nimport { Link, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(_ref) {\n  _s();\n\n  let {\n    location\n  } = _ref;\n  //   const dispatch = useDispatch();\n  const [show, setShow] = useState(\"false\"); //   const auth = useSelector((state) => state.auth);\n  //   const { authenticate } = auth;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n  let history = useHistory(); //   useEffect(() => {\n  //     if (authenticate) {\n  //       history.push(redirect);\n  //     }\n  //   }, [history, location, redirect]);\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Invalid email\").required(\"Required Email\"),\n    password: Yup.string().required(\"Required Password\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"site-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-title background-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"breadcrumbs\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              marginLeft: \"-2.5em\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"/\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-login\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Log in with your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              email: \"\",\n              password: \"\"\n            },\n            validationSchema: validationSchema,\n            onSubmit: (values, _ref2) => {\n              let {\n                setSubmitting,\n                resetForm\n              } = _ref2;\n              console.log(values); // dispatch(onLogin(values.email, values.password, history));\n            },\n            children: _ref3 => {\n              let {\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting\n              } = _ref3;\n              return /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                id: \"loginForm\",\n                className: \"clearfix\",\n                autocomplete: \"off\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"email\",\n                    type: \"email\",\n                    className: \"form-control\",\n                    placeholder: \"Email\",\n                    name: \"email\",\n                    onChange: handleChange,\n                    value: values.email,\n                    onBlur: handleBlur,\n                    required: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorValidation, {\n                    touched: touched.email,\n                    message: errors.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: show ? \"password\" : \"text\",\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    name: \"password\",\n                    placeholder: \"Password\",\n                    className: \"form-control\",\n                    value: values.password,\n                    required: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: `fa ${show ? \"fa-eye-slash\" : \"fa-eye\"} login-password-icon1`,\n                    onClick: () => setShow(!show),\n                    style: {\n                      position: \"absolute\",\n                      left: \"410px\",\n                      top: \"15px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorValidation, {\n                    touched: touched.password,\n                    message: errors.password\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inline clearfix\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    value: \"Send Messager\",\n                    className: \"btn-primary\",\n                    children: \"Login\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: \"/reset\",\n                      children: \"Forgot your password?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inline clearfix\",\n                  children: /*#__PURE__*/_jsxDEV(\"center\", {\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        float: \"none\"\n                      },\n                      children: [\"Not a member yet?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                        to: redirect ? `/register?redirect=${redirect}` : \"/register\",\n                        children: \"Register Now\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 139,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"vdVmpfZ0eyJAVlT5uZS8KVfmp5c=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/pravi/OneDrive/Desktop/one_inr/one_inr_web/src/Components/auth/Login.js"],"names":["React","useEffect","useState","ErrorValidation","Yup","Formik","useDispatch","useSelector","Link","useHistory","Login","location","show","setShow","redirect","search","split","history","validationSchema","object","shape","email","string","required","password","min","matches","marginLeft","values","setSubmitting","resetForm","console","log","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","position","left","top","float"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ErrorValidation from \"./ErrorValidation\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { onLogin } from \"../../../Redux/Authentication/AuthAction\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport default function Login({ location }) {\r\n  //   const dispatch = useDispatch();\r\n  const [show, setShow] = useState(\"false\");\r\n\r\n  //   const auth = useSelector((state) => state.auth);\r\n  //   const { authenticate } = auth;\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  let history = useHistory();\r\n  //   useEffect(() => {\r\n  //     if (authenticate) {\r\n  //       history.push(redirect);\r\n  //     }\r\n  //   }, [history, location, redirect]);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Invalid email\").required(\"Required Email\"),\r\n    password: Yup.string()\r\n      .required(\"Required Password\")\r\n      .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n      .matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\r\n  });\r\n\r\n  return (\r\n    <div className=\"site-main\">\r\n      <div className=\"page-title background-page\">\r\n        <div className=\"container\">\r\n          <h1>Login</h1>\r\n          <div class=\"breadcrumbs\">\r\n            <ul style={{ marginLeft: \"-2.5em\" }}>\r\n              <li>\r\n                <Link to=\"/\">Home</Link>\r\n                <span>/</span>\r\n              </li>\r\n              <li>Login</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"main-content\">\r\n          <div className=\"form-login\">\r\n            <h2>Log in with your account</h2>\r\n            <Formik\r\n              initialValues={{\r\n                email: \"\",\r\n                password: \"\",\r\n              }}\r\n              validationSchema={validationSchema}\r\n              onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                console.log(values);\r\n                // dispatch(onLogin(values.email, values.password, history));\r\n              }}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isSubmitting,\r\n              }) => (\r\n                <form\r\n                  onSubmit={handleSubmit}\r\n                  id=\"loginForm\"\r\n                  className=\"clearfix\"\r\n                  autocomplete=\"off\"\r\n                >\r\n                  <div class=\"field\">\r\n                    <input\r\n                      id=\"email\"\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      name=\"email\"\r\n                      onChange={handleChange}\r\n                      value={values.email}\r\n                      onBlur={handleBlur}\r\n                      required=\"\"\r\n                    />\r\n                    <ErrorValidation\r\n                      touched={touched.email}\r\n                      message={errors.email}\r\n                    />\r\n                  </div>\r\n                  <div class=\"field\">\r\n                    <input\r\n                      type={show ? \"password\" : \"text\"}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      name=\"password\"\r\n                      placeholder=\"Password\"\r\n                      className=\"form-control\"\r\n                      value={values.password}\r\n                      required=\"\"\r\n                    />\r\n                    <i\r\n                      className={`fa ${\r\n                        show ? \"fa-eye-slash\" : \"fa-eye\"\r\n                      } login-password-icon1`}\r\n                      onClick={() => setShow(!show)}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        left: \"410px\",\r\n                        top: \"15px\",\r\n                      }}\r\n                    ></i>\r\n                    <ErrorValidation\r\n                      touched={touched.password}\r\n                      message={errors.password}\r\n                    />\r\n                  </div>\r\n                  <div className=\"inline clearfix\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      value=\"Send Messager\"\r\n                      className=\"btn-primary\"\r\n                    >\r\n                      Login\r\n                    </button>\r\n                    <p>\r\n                      <Link to=\"/reset\">Forgot your password?</Link>\r\n                    </p>\r\n                    <br />\r\n                  </div>\r\n                  <div className=\"inline clearfix\">\r\n                    <center>\r\n                      <p style={{ float: \"none\" }}>\r\n                        Not a member yet?{\" \"}\r\n                        <Link\r\n                          to={\r\n                            redirect\r\n                              ? `/register?redirect=${redirect}`\r\n                              : \"/register\"\r\n                          }\r\n                        >\r\n                          Register Now\r\n                        </Link>\r\n                      </p>\r\n                    </center>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}